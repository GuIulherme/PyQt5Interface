# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'interqt.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5.QtWidgets import QFileDialog
from PyQt5.QtGui import QImage
import cv2, imutils
import time
import numpy as np
import numpy as np
from PyQt5 import QtCore, QtGui, QtWidgets, uic
from PyQt5.QtWidgets import QLabel, QTreeWidgetItem, QTreeWidget
from PyQt5.QtCore import Qt, QThread, pyqtSignal
from PyQt5.QtGui import QImage, QPixmap


class VideoStream(QThread):
    frame_updated = pyqtSignal(QPixmap)

    def __init__(self, parent=None):
        super(VideoStream, self).__init__(parent)
        self.cap = cv2.VideoCapture(0)  # Substitua pelo caminho do seu vídeo local
        self.cap.set(cv2.CAP_PROP_FPS, 10)  # Set the desired frame rate (e.g., 10 FPS)
        self.streaming = False

    def run(self):
        self.streaming = True
        while self.streaming:
            ret, frame = self.cap.read()
            if ret:
                frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
                frame = imutils.resize(frame, width=1000, height=800)  # Redimensiona o frame para o tamanho desejado
                img = QImage(frame.data, frame.shape[1], frame.shape[0], QImage.Format_RGB888)
                pixmap = QPixmap.fromImage(img)
                self.frame_updated.emit(pixmap)

    def stop(self):
        self.streaming = False
        self.cap.release()



class Ui_MainWindow(object):
    def __init__(self):
        pass
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1379, 872)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.frame_1 = QtWidgets.QFrame(self.centralwidget)
        self.frame_1.setGeometry(QtCore.QRect(0, 0, 451, 976))
        self.frame_1.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_1.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_1.setObjectName("frame")
        
        self.tree = QTreeWidget(self.frame_1)
        self.tree.setGeometry(QtCore.QRect(0, 0, 451, 976))  # Defina a geometria da árvore para ser a mesma do frame
        self.tree.setHeaderLabels(["Sentido", "Valor"])
        




        self.frame_4 = QtWidgets.QFrame(self.centralwidget)
        self.frame_4.setGeometry(QtCore.QRect(450, 0, 1463, 976))
        self.frame_4.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_4.setObjectName("frame_4")

        self.pushButton_start = QtWidgets.QPushButton(self.frame_4)
        self.pushButton_start.setGeometry(QtCore.QRect(750, 5, 90, 25))
        self.pushButton_start.setObjectName("pushButton_start")
        self.pushButton_start.clicked.connect(self.start_stream)

        self.video_label = QLabel(self.frame_4)
        self.video_label.setGeometry(QtCore.QRect(300, 70, 1300, 660))  # Defina as coordenadas e tamanho conforme necessário
        self.video_label.setText("Aguardando transmissão...")





        self.pushButton_stop = QtWidgets.QPushButton(self.frame_4)
        self.pushButton_stop.setGeometry(QtCore.QRect(730, 35, 140, 25))
        self.pushButton_stop.setObjectName("pushButton_stop")
        self.pushButton_stop.clicked.connect(self.stop_stream)




       # self.start_button = QPushButton("Iniciar Recebimento")
       # self.start_button.clicked.connect(self.start_stream)
        #frame_4.addWidget(self.start_button)

        #self.stop_button = QPushButton("Parar Recebimento")
        #self.stop_button.clicked.connect(self.stop_stream)
       # self.stop_button.setEnabled(False)
       # frame_4.addWidget(self.stop_button)

       # self.video_label = QLabel("Aguardando transmissão...")
        #frame_4.addWidget(self.video_label)









        

        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setGeometry(QtCore.QRect(450, 750, 1463, 231))
        self.frame_2.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_2.setObjectName("frame_2")

        self.pushButton_frente = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_frente.setGeometry(QtCore.QRect(350, 20, 60, 55))
        self.pushButton_frente.clicked.connect(self.incrementar_frente)
        self.pushButton_frente.setObjectName("pushButton")

        self.pushButton_esquerda = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_esquerda.setGeometry(QtCore.QRect(250, 90, 60, 55))
        self.pushButton_esquerda.clicked.connect(self.incrementar_esquerda)
        self.pushButton_esquerda.setObjectName("pushButton_2")

        self.pushButton_direita = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_direita.setGeometry(QtCore.QRect(450, 90, 60, 55))
        self.pushButton_direita.clicked.connect(self.incrementar_direita)
        self.pushButton_direita.setObjectName("pushButton_3")

        self.pushButton_tras = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_tras.setGeometry(QtCore.QRect(350, 90, 60, 55))
        self.pushButton_tras.clicked.connect(self.incrementar_tras)
        self.pushButton_tras.setObjectName("pushButton_4")







        self.pushButton_cima = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_cima.setGeometry(QtCore.QRect(890, 20, 60, 55))
        self.pushButton_cima.clicked.connect(self.incrementar_cima)
        self.pushButton_cima.setObjectName("pushButton_cima")

        self.pushButton_ovo = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_ovo.setGeometry(QtCore.QRect(890, 90, 60, 55))
        self.pushButton_ovo.clicked.connect(self.incrementar_ovo)
        self.pushButton_ovo.setObjectName("pushButton_ovo")


        self.pushButton_antihorario = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_antihorario.setGeometry(QtCore.QRect(810, 90, 60, 55))
        self.pushButton_antihorario.clicked.connect(self.incrementar_anti)
        self.pushButton_antihorario.setObjectName("pushButton_anti")

        self.pushButton_horario = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_horario.setGeometry(QtCore.QRect(970, 90, 60, 55))
        self.pushButton_horario.clicked.connect(self.incrementar_horario)
        self.pushButton_horario.setObjectName("pushButton_hora")

        self.pushButton_baixo = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_baixo.setGeometry(QtCore.QRect(890, 160, 60, 55))
        self.pushButton_baixo.clicked.connect(self.incrementar_baixo)
        self.pushButton_baixo.setObjectName("pushButton_baixo")



        # Variáveis para armazenar a direção
        self.Esquerdavar = 0
        self.Direitavar = 0
        self.Frentevar = 0
        self.Trasvar = 0

        self.Cimavar = 0
        self.Baixovar = 0
        self.Horariovar = 0
        self.Ovovar = 0
        self.Antivar = 0

        self.valores = []







        MainWindow.setCentralWidget(self.centralwidget)

        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1379, 22))
        self.menubar.setObjectName("menubar")

        self.menudd = QtWidgets.QMenu(self.menubar)
        self.menudd.setObjectName("menudd")

        MainWindow.setMenuBar(self.menubar)
        
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")

        MainWindow.setStatusBar(self.statusbar)

        self.menubar.addAction(self.menudd.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    
        # Inicializa o objeto de transmissão de vídeo
        self.video_stream = VideoStream()
        self.video_stream.frame_updated.connect(self.update_video)

    def start_stream(self):
        self.pushButton_start.setEnabled(False)
        self.pushButton_stop.setEnabled(True)
        self.video_label.setText("Recebendo vídeo...")
        self.video_stream.start()


    def stop_stream(self):
        self.pushButton_start.setEnabled(True)
        self.pushButton_stop.setEnabled(False)
        self.video_label.setText("Aguardando transmissão...")
        self.video_stream.stop()
        self.video_stream.wait()  # Aguarda o término do thread
        del self.video_stream  # Remove a instância do objeto
        self.video_stream = VideoStream()  # Cria uma nova instância do objeto
        self.video_stream.frame_updated.connect(self.update_video)


    def update_video(self, pixmap):
        self.video_label.setPixmap(pixmap)

    def incrementar_esquerda(self):
        self.Esquerdavar += 1
        self.valores.append(self.Esquerdavar)
        self.imprimir_valores()

    def incrementar_direita(self):
        self.Direitavar += 1
        self.valores.append(self.Esquerdavar)
        self.imprimir_valores()

    def incrementar_frente(self):
        self.Frentevar += 1
        self.valores.append(self.Frentevar)
        self.imprimir_valores()

    def incrementar_tras(self):
        self.Trasvar += 1
        self.valores.append(self.Trasvar)
        self.imprimir_valores()

    def incrementar_cima(self):
        self.Cimavar += 1
        self.valores.append(self.Cimavar)
        self.imprimir_valores()

    def incrementar_baixo(self):
        self.Baixovar += 1
        self.valores.append(self.Baixovar)
        self.imprimir_valores()

    def incrementar_ovo(self):
        self.Ovovar += 1
        self.valores.append(self.Ovovar)
        self.imprimir_valores()


    def incrementar_anti(self):
        self.Antivar += 1
        self.valores.append(self.Antivar)
        self.imprimir_valores()

    def incrementar_horario(self):
        self.Horariovar += 1
        self.valores.append(self.Horariovar)
        self.imprimir_valores()       

    def imprimir_valores(self):
        self.tree.clear()
        sentidos = ["Direita", "Esquerda", "Frente", "Tras", "Cima", "Baixo", "Ovo", "Horario", "Anti-horario"]
        valores = [self.Direitavar, self.Esquerdavar, self.Frentevar, self.Trasvar, self.Cimavar, self.Baixovar, self.Ovovar, self.Horariovar, self.Antivar]
        for sentido, valor in zip(sentidos, valores):
            item = QTreeWidgetItem([sentido, str(valor)])
            self.tree.addTopLevelItem(item)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_start.setText(_translate("MainWindow", "Iniciar"))
        self.pushButton_stop.setText(_translate("MainWindow", "Parar transmissão"))
        self.pushButton_frente.setText(_translate("MainWindow", "↑"))
        self.pushButton_esquerda.setText(_translate("MainWindow", "←"))
        self.pushButton_direita.setText(_translate("MainWindow", "→"))
        self.pushButton_tras.setText(_translate("MainWindow", "↓"))

        self.pushButton_cima.setText(_translate("MainWindow", "↑"))
        self.pushButton_ovo.setText(_translate("MainWindow", "p"))
        self.pushButton_antihorario.setText(_translate("MainWindow", "⟲"))
        self.pushButton_horario.setText(_translate("MainWindow", "⟳"))
        self.pushButton_baixo.setText(_translate("MainWindow", "↓"))



        self.menudd.setTitle(_translate("MainWindow", "dd"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
